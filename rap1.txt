\section*{Générateurs de séquences pseudo-aléatoires}
% %%%%%%%%%%%%%%%%%%%
Durant cette semaine, j'ai décidé d'implémenter différentes méthodes pour la génération de séquences  pseudo-aléatoires. En partant d'un choix antérieur celui du xorshift 128+. En outre, il est relativement simple tout en étant rapide, il utilise 128 bits d'état, et a une longueur de période de $2^{128} - 1$.\\
De là, j'ai implémenté et tester les méthodes suivantes : \begin{itemize}
    \item[--] xoroshiro 128++
    \item[--] xoroshiro 128**
    \item[--] xoroshiro 256++
    \item[--] xoroshiro 256**
\end{itemize}

La première séquence de tests, on utilise 15 fréquences différentes comportant 4 bits chacune. \\

\textbf{xorshift 128+}\\
\begin{table}[H]
\centering
\begin{tabular}{|c|c|c|ll}
\cline{1-3}
\textbf{Nombre de sauts} & \textbf{Variance} & \textbf{Variance totale} &  &  \\ \cline{1-3}
100                      & 4                 & 23                       &  &  \\ \cline{1-3}
500                      & 9                 & 47                       &  &  \\ \cline{1-3}
1000                     & 15                & 98                       &  &  \\ \cline{1-3}
\end{tabular}
\end{table}

\textbf{xoroshiro 128++}\\
\begin{table}[H]
\centering
\begin{tabular}{|c|c|c|ll}
\cline{1-3}
\textbf{Nombre de sauts} & \textbf{Variance} & \textbf{Variance totale} &  &  \\ \cline{1-3}
100                      & 5                 & 33                       &  &  \\ \cline{1-3}
500                      & 16                & 61                       &  &  \\ \cline{1-3}
1000                     & 17                & 104                      &  &  \\ \cline{1-3}
\end{tabular}
\end{table}
\newpage

\textbf{xoroshiro 128**}\\
\begin{table}[H]
\centering
\begin{tabular}{|c|c|c|ll}
\cline{1-3}
\textbf{Nombre de sauts} & \textbf{Variance} & \textbf{Variance totale} &  &  \\ \cline{1-3}
100                      & 5                 & 26                       &  &  \\ \cline{1-3}
500                      & 10                & 67                       &  &  \\ \cline{1-3}
1000                     & 13                & 68                       &  &  \\ \cline{1-3}
\end{tabular}
\end{table}


\textbf{xoroshiro 256++}\\
\begin{table}[H]
\centering
\begin{tabular}{|c|c|c|ll}
\cline{1-3}
\textbf{Nombre de sauts} & \textbf{Variance} & \textbf{Variance totale} &  &  \\ \cline{1-3}
100                      & 4                 & 25                       &  &  \\ \cline{1-3}
500                      & 9                 & 68                       &  &  \\ \cline{1-3}
1000                     & 16                & 78                       &  &  \\ \cline{1-3}
\end{tabular}
\end{table}

\textbf{xoroshiro 256**}\\
\begin{table}[H]
\centering
\begin{tabular}{|c|c|c|ll}
\cline{1-3}
\textbf{Nombre de sauts} & \textbf{Variance} & \textbf{Variance totale} &  &  \\ \cline{1-3}
100                      & 4                 & 24                       &  &  \\ \cline{1-3}
500                      & 10                & 70                       &  &  \\ \cline{1-3}
1000                     & 12                & 68                       &  &  \\ \cline{1-3}
\end{tabular}
\end{table}

La variance constitue l'écart entre la valeur moyenne ($\frac{Nb_{saut}}{Nb_{frequence}}$) et la valeur obtenue.\\
La variance totale représente, quant à elle, la somme des variances pour chaque nombre de sauts (100, 500, 1000).\\
Pour un nombre de sauts relativement faible le xorshift 128+ est plus intéressant car il est plus rapide que les autres méthodes. En effet, pour 100 sauts, le xorshift 128+ mets $\sim$ 1.55 secondes contre $\sim$ 2.10 secondes pour le xoroshiro 256**. \\

À présent, utilisons 127 fréquences différentes avec pour 7 bits pour chacune : \\

\textbf{xorshift 128+}\\
\begin{table}[H]
\centering
\begin{tabular}{|c|c|c|ll}
\cline{1-3}
\textbf{Nombre de sauts} & \textbf{Variance} & \textbf{Variance totale} &  &  \\ \cline{1-3}
100                      & 4                 & 100                      &  &  \\ \cline{1-3}
500                      & 6                 & 214                      &  &  \\ \cline{1-3}
1000                     & 7                 & 283                      &  &  \\ \cline{1-3}
\end{tabular}
\end{table}

\textbf{xoroshiro 128++}\\
\begin{table}[H]
\centering
\begin{tabular}{|c|c|c|ll}
\cline{1-3}
\textbf{Nombre de sauts} & \textbf{Variance} & \textbf{Variance totale} &  &  \\ \cline{1-3}
100                      & 4                 & 101                       &  &  \\ \cline{1-3}
500                      & 7                 & 207                       &  &  \\ \cline{1-3}
1000                     & 8                 & 312                       &  &  \\ \cline{1-3}
\end{tabular}
\end{table}

\\

\textbf{xoroshiro 128**}\\
\begin{table}[H]
\centering
\begin{tabular}{|c|c|c|ll}
\cline{1-3}
\textbf{Nombre de sauts} & \textbf{Variance} & \textbf{Variance totale} &  &  \\ \cline{1-3}
100                      & 6                 & 101                       &  &  \\ \cline{1-3}
500                      & 7                 & 200                       &  &  \\ \cline{1-3}
1000                     & 7                 & 261                       &  &  \\ \cline{1-3}
\end{tabular}
\end{table}

\\

\textbf{xoroshiro 256++}\\
\begin{table}[H]
\centering
\begin{tabular}{|c|c|c|ll}
\cline{1-3}
\textbf{Nombre de sauts} & \textbf{Variance} & \textbf{Variance totale} &  &  \\ \cline{1-3}
100                      & 8                 & 101                       &  &  \\ \cline{1-3}
500                      & 8                 & 222                       &  &  \\ \cline{1-3}
1000                     & 9                 & 314                       &  &  \\ \cline{1-3}
\end{tabular}
\end{table}

\\
\textbf{xoroshiro 256**}\\
\begin{table}[H]
\centering
\begin{tabular}{|c|c|c|ll}
\cline{1-3}
\textbf{Nombre de sauts} & \textbf{Variance} & \textbf{Variance totale} &  &  \\ \cline{1-3}
100                      & 5                 & 101                       &  &  \\ \cline{1-3}
500                      & 6                 & 208                       &  &  \\ \cline{1-3}
1000                     & 7                 & 269                       &  &  \\ \cline{1-3}
\end{tabular}
\end{table}
\vspace{0.5cm}

À travers la simulation des différentes méthodes, on constate que dans le cas d'un nombre important de fréquences et des sauts, les méthodes xoroshiro 256** et 128**, toutes deux passant le test du \textit{Big Crush}(permettant de déterminer la qualité aléatoire de la séquence) sont idoines. Dans le cas opposé, il est intéressant de considérer des méthodes utilisant le moins de ressources, tel que xorshift 128+, qui ne possède pas de rotation comme les xoroshiro.\\

\newpage

\section*{Analyse temps-fréquence}

L'expression du signal de saut de fréquence pour la modulation MFSK peut s'exprimer après échantillonage par : $$
S_M(n) = a_Me^{j(2\pi f_{M,n}n/f_s+\phi_M)} 
$$
avec $a_M$ l'amplitude du $M$-ième signal, $f_{M,n}$ la fréquence du $M$-ième signal FH et $phi_M$ la phase initiale du $M$-ième signal FH.
\\

\textbf{Distribution de Wigner-Ville}\\

De part la littérature, on observe une récurrence de la distribution de Wigner-Ville (WVD). En effet, elle est l'outil de référence pour les analyses temps-fréquence bilinéaires et possède de nombreuses propriétés intéressantes, tel que la très bonne localisation temporelle et fréquentielle pour des signaux non-stationnaires.\\
Néanmoins, la nature entièrement quadratique de la distribution est connue pour créer termes croisés parasites, qu'il nous faut filtrer, à l'aide de méthodes dérivées.\\
Le choix de filtrage doit être fait dans une optique de compromis, car plus on filtre en temps et/ou en fréquence, plus la résolution en temps et/ou en fréquence diminue.\\

Une alternative intéressante à la distribution de Wigner-Ville et la distribution $B$. \\
En outre, elle a de bien meilleures performances que les autres dans de nombreux exemples comparatif (WVD, Choi-Williams Distribution, Spectrogram…). De plus, des preuves statistiques permettent de montrer les performances similaires entre la distribution $B$ et celle de Wigner-Ville.
\\


\textbf{Transformée en ondelettes}\\

Au départ, j’avais choisi d’utiliser les ondelettes (Morlet wavelet) pour analyser le signal saut de fréquences (pour détecter les contours et ainsi estimer les différents paramètres). En effet, les ondelettes permettent une analyse du signal sur les différentes échelles (scales). Précision aussi bien dans les basses que les hautes fréquences.\\
Cependant, cette possibilité n’est pas envisageable dans le cadre du temps-réel.\\

\newpage

\section*{Travail envisagé}\\
\vspace{0.5cm}

N'ayant pas pu tester le générateur le plus rapide passant le \textit{Big Crush }, celui de Lehmer sur 128 bits, je l'ai testé sur 64 bits. Cependant, les résultats étaient peu intéressant car semblables aux xoroshiro. J'aimerai donc si possible pouvoir le tester sur 128 bits.\\

\textbf{Hilbert-Huang}\\

Je vais m'attarder sur la transformée d'Hilbert-Huang car elle ne possède pas de termes croisés (cross-terms), et aucune hypothèse concernant les informations des paramètres n'est nécessaires.\\
Cette méthode décompose itérativement le signal FH en fonctions de mode intrinsèque (IMF) et applique la transformée de Hilbert à chaque IMF pour produire le spectre de Hilbert.\\
L'énergie locale et la fréquence instantanée dérivée des IMF par la transformée de Hilbert permettent de nous donner une distribution complète énergie-fréquence-temps du signal.\\

\textbf{Fréquence instantanée}\\

Concernant l'analyse du signal FH, j'envisage aussi de m'attarder sur les différentes méthodes utilisant la fréquence instantanée, parce que l'énergie du signal est concentrée le long de la fréquence instantanée dans le domaine fréquentiel, tandis que le bruit est relativement dispersé. \\

Une autre piste pourrait être les \textit{Polyphase filter banks}, potentiellement pour le temps-réel.\\

Je vais aussi voir la possibilité d'utiliser la EMBD (Extended modified B-distribution), car elle est une alternative à la distribution $B$ et elle est comparable avec la SPWVD (Smoothed pseudo Wigner-Ville distribution) par exemple.