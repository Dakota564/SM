Cette semaine de rentrée à été caractérisée par l'implémentation de la partie émission de la chaîne de transmission d'un système à évasion de fréquence, basé sur les normes Bluetooth.
\section*{Partie émission}
Les deux premiers jours ont été consacrés à l'importation de la bibliothèque Dspp. Bien que des difficultés ont été rencontrées, cela m'a permis d'acquérir des connaissances essentielles sur la suite Cmake.\\
Une fois la bibliothèque importée, je me suis attaqué à l'élaboration des modules constituant la chaîne d'émission. Pour cela, un travail de documentation et de compréhension de cette bibliothèque à été nécessaire, afin de pouvoir utiliser convenablement les modules existant et d'implémenter les parties manquantes.\\

\section*{Bluetooth}
La transmission des données ce fait en deux temps, une phase appelée \textit{inquiry} et une autre, \textit{page}.\\
Durant la phase d'\textit{inquiry}, l'appareil a pour objectif de détecter les périphériques avoisinants. Pour cela, il va envoyer un paquet ID, contenant une adresse générique, spécifique à cette procédure. Ce paquet comprend un préambule, un mot de synchronisation et un trailer, comme ci-dessous :

\begin{figure}[H]
\centering
\includegraphics[width=13cm]{Access_Code.jpg}
\caption{Format du paquet GIAC}
\end{figure}

Les valeurs du préambule et du trailer dépendent respectivement du bit de poids faible (LSB) et celui de poids fort (MSB) du mot de synchronisation. En effet, si le LSB est égale à zéro, alors le préambule vaut 0101, 1010 sinon. Si le MSB, quant à lui vaut zéro, le trailer sera 1010 et 0101 sinon.\\

Le mot de synchronisation utilise le General Inquiry Access Code (GIAC) de valeur \textbf{0x9E8B33}.\\
Le mot de synchronisation comporte une faible intercorrélation et un pic d'autocorrélation, permettant ainsi de déterminer le début de la transmission.\\ 

Une fois envoyé, il reçoit dans un délai idéal de 625 $\mu s$, un paquet FHS (Frequency hopping Synchronisation) contenant l'adresse et l'horloge du périphérique découvert (CLKN).\\

Ci-dessous est représenté le format de l'en-tête :
\begin{figure}[H]
    \centering
    \includegraphics[width=13cm]{Annotation 2020-05-17 131300.png}
    \caption{Format de l'en-tête}
\end{figure}


Dans la deuxième partie de l'émission (\textit{page procedure}), le paquet ID envoyé par l'appareil 1 (celui voulant établir la connexion avec l'appareil 2) est composé cette fois-ci du code d'accès DAC (Device Access Code) contenant l'adresse de l'appareil avec qui l'on veut établir une connexion. Une fois reçu, l'appareil 2 stoppe son horloge pour ne pas perdre la fréquence sur laquelle il a perçu la donnée.\\
En effet, cela s'explique par le fait que les sauts de fréquence sont déduits à partir de l'adresse et de l'horloge.\\

Afin de confirmer la réception, il va à son tour envoyer un paquet ID comportant son adresse. Cette réception va stopper l'horloge de l'appareil 1 et déclencher l'envoi du paquet FHS (Frequency Hopping Synchronization) contenant l'adresse de l'appareil et horloge de celui-ci.\\


\begin{figure}[H]
    \centering
    \includegraphics[width=13cm]{fhs_packet.png}
    \caption{Format de paquet FHS}
\end{figure}

Afin que les deux appareils fonctionnent sur les mêmes sauts de fréquences, une synchronisation de leurs horloges est indispensable. Pour ce faire, un offset sera ajouté à l'horloge du périphérique nouvellement découvert.\\
En se calant sur l'adresse de l'appareil cherchant à entrer en connexion et en ajoutant un offset de la part de l'autre système, une séquence identique de saut de fréquence des deux côtés sera établit.\\

\newpage
\section*{Horloge}
Durant cette semaine, une série d'interrogation liée à l'horloge est restée sans réponse. Pourquoi vouloir connaître l'horloge des appareils établissant une connexion ? Pourquoi la stopper une fois réception de paquets ? Et enfin, quelle forme a-t-elle ?\\

Chaque appareil utilisant la communication Bluetooth à une horloge interne indépendante, ayant une période de $2^{28}-1$, à une fréquence de 3,2 kHz, c'est-à-dire 312,5 $\mu s$ par \textit{tick}. À noter que cette horloge n'a rien à voir avec l'heure du jour et peut donc être initialisée par une valeur aléatoire. Elle est donc composée de 28 bits telle que :

\begin{figure}[H]
    \centering
    \includegraphics[width=11cm]{Bluetooth_clock.png}
    \caption{Format de l'horloge}
\end{figure}

L'horloge de l'appareil 1 reste fixe, contrairement à celle de l'appareil 2 qui va s'adapter à 1, en ajoutant un \textit{offset} (CLKE). Ceci va permettre aux deux périphériques d'avoir une même séquence de sauts de fréquence.\\

Afin de faciliter la compréhension, voici ci-dessous un résumé des procédures pour l'établissement d'une connexion entre deux appareils :