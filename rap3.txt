J'ai voulu tester un nouveau générateur de nombre pseudo-aléatoire, le Mersenne Twister sur 64 bits, qui à une période de $2^{19937}-1$.\\


Pour 23 sauts de fréquence : \\

\begin{table}[H]
\centering
\begin{tabular}{|c|c|c|c|c|c|c|}
\hline
\textbf{}       & \multicolumn{3}{c|}{\textbf{xoroshiro256**}} & \multicolumn{3}{c|}{\textbf{mt19937-64}} \\ \hline
Nombre de sauts & Écart      & Écart total     & Temps (s)     & Écart   & Écart total   & Temps (s)  \\ \hline
100             & 4          & 38              & 1.48          & 4       & 35            & 1.53       \\ \hline
500             & 13         & 126             & 1.92          & 12      & 126           & 1.87       \\ \hline
1000            & 21         & 247             & 2.35          & 23      & 277           & 2.4        \\ \hline
\end{tabular}
\end{table}

\\

Pour 79 sauts de fréquence : \\

\begin{table}[H]
\centering
\begin{tabular}{|c|c|c|c|c|c|c|}
\hline
\textbf{}       & \multicolumn{3}{c|}{\textbf{xoroshiro256**}} & \multicolumn{3}{c|}{\textbf{mt19937-64}} \\ \hline
Nombre de sauts & Écart      & Écart total     & Temps (s)     & Écart   & Écart total   & Temps (s)  \\ \hline
100             & 1          & 55              & 1.53          & 2       & 56            & 1.55       \\ \hline
500             & 6          & 195             & 1.95          & 6       & 182           & 1.92       \\ \hline
1000            & 11         & 368             & 2.53          & 10      & 355           & 2.47       \\ \hline
\end{tabular}
\end{table}
\\

On constate dans le cas d'un nombre de sauts conséquent et/ou d'un nombre de fréquences plus élevées, le Mersenne Twister est sensiblement plus rapide que le xoroshiro 256** pour des écarts similaires, suivant ma configuration d'ordinateur. Cependant, cet algorithme ne passe pas deux des tests du \textit{BigCrush} du \textit{TestU01}.\\

J'ai voulu effectuer un autre test, pour vérifier la nature "aléatoire" des séquences générées par le xoroshiro256 **, qui est actuellement la méthode la plus prometteuse.\\
Pour cela, on va remplacer les 0 par des -1. Ce changement va permettre la somme de l'ensemble des bits, notée $S$.\\
La séquence générée sur 64 bits est la suivante :\\
1100011110110011000011001100000011000110110110001101101101010101. \\

Une fois modifié, cela donne :\\
1-11-11-11-111-111-111-1-1-111-111-111-1-1-111-1-1-1-1-1-111-1-111-1-1-1-111-1-111-11111-1-1-111-1.\\

Le test statistique s'écrit sous la forme $$
s_{obs} = \frac{|S|}{\sqrt{n}}$$
avec n le nombre de bits de la séquence sélectionnée pour le test et $|S|$ la valeur absolue de la somme de chaque élément de la séquence.\\
AN : $$s_{obs} = \frac{2}{\sqrt{64}} = 0.25$$

Par la suite, on détermine la p-value, qui est une mesure du risque de rejet de l'hypothèse nulle $H_0$, avec $H_0$ : la séquence est aléatoire. En posant le risque de première espèce $\alpha$ = 0.01 ($\alpha \in [0,1])$, si la $p\_value$ calculée est inférieure à 0,01, il faut en conclure que la séquence est non-aléatoire. Sinon, la séquence est aléatoire.\\


La $p\_value$ est définie tel que $$
p\_value = erfc(\frac{s_{obs}}{\sqrt n})$$

AN : $$
p\_value = erfc(\frac{0.25}{\sqrt64}) = 0.96$$
$erfc$ est la fonction d'erreur complémentaire.\\

Étant donné que la $p\_value$ est largement supérieure à 0,01 (c'est-à-dire $p\_value$ = 0,96) et très proche de 1, on peut en conclure que la séquence est aléatoire.\\



%file:///C:/Users/charl/Downloads/A%20statistical%20test%20suite%20for%20random%20and%20pseudorandom%20number%20generators%20for%20cryptographic%20applications%20(SuDoc%20C%2013.10800-22)%20by%20U.S.%20National%20Archives%20and%20Records%20Administration%20(z-lib.org).pdf
%"A Statistical Test Suite for
%Random and Pseudorandom
%Number Generators for
%Cryptographic Applications "


%\section*{Signal Model}

%Le signal reçu à la réception s'exprime par : $$
%y(t) = \sum_{n=1}^{N}x_n(t) + w(t), \ 0<t \leq T
%$$
%avec $w(t)$ le bruit blanc gaussien et  $$
%x_n(t)= \sum_{k=1}^{N} e^{j(2\pi f_{nk}t + \phi_{nk})} rect(\frac{t-(k-1)T_n - \Delta t_{n0}}{T_n})
%$$
%où $\Delta t_{n0}$ est l'intervalle du saut incomplet et $rect(t)$ est égal à un pour $t\in(0,1]$ et zéro ailleurs (fenêtre rectangulaire unitaire), $T_H$ la période de saut, $N$ le nombre de saut,$f_k$ la fréquence,$\phi_k$ la phase initiale et $\Delta t_{0n}$ la durée du saut initial non complet durant le temps d'observation


\section*{Pourquoi 79 et 23 sauts de fréquence respectivement aux États-unis et en France ?}

Le Bluetooth utilise une bande de fréquence sans licence nécessaire du gouvernement, la ISM (Industrial, Scientific and Medical).
La taille de la bande de fréquences allouée varie selon les pays. Aux Etats-Unis par exemple, la FCC (Federal Communications Commission) impose l’intervalle 2,400 – 2,485 GHZ.\\
Tandis, qu’une grande majorité des pays ont adopté cette réglementation, l’ARCEP (Autorité de régulation des communications électroniques, des postes et de la distribution de la presse) qui est un l’organisme de régulation français, alloue la bande 2.4465-2.4835 GHz.\\
Contrairement aux États-Unis, avec des bandes de gardes de 2/3,5 MHz et donc ses 79 sauts de fréquences possibles, la France à des bandes de garde définies à 7,5 MHz. Par conséquent, il ne peut y avoir que 23 sauts de fréquence de 1 MHz.


\newpage
\textbf{Noyau adaptatif optimal} : \\

Comme abordé dans le rapport précédent, la distribution générique temps-fréquence s'exprime par la transformée de Fourier en deux dimensions du produit de la fonction d'ambiguïté $A(\theta,\tau)$ et du noyau $K(p,b)$ : $$
D(n,k) = \sum_{p=-N/2}^{N/2-1}\sum_{b=-N/2}^{N/2-1} K(p,b)A(\theta,\tau)e^{j(-bk-pn)2\pi /N}
$$
avec $$ A(\theta,\tau) = \sum_{n=0}^{N-1} x(n+\frac{\tau}{2})x^*(n-\frac{\tau}{2})e^{-j2\pi \theta n}$$
et $k(\theta,\tau)$ est le noyau, où  $n$ et $k$ sont des variables discrètes en temps et fréquence, sans oublier $\tau$ et $\theta$ désignant le décalage en temps et en fréquence. \\

La fonction d'ambiguïté symétrique, qui n'est autre que l'autocorrelation du signal en deux dimensions en temps et en fréquence (ou encore la transformée de Fourier inverse 2D de la WVD), va permettre de ce placer dans le domaine d'ambiguïté où les auto-components sont situés.\\

Si l'on considère le signal $$
x(t) = \sum_{n=1}^{N}x_n(t)$$
où les composantes sont limitées en temps par $$
x_n(t) \neq 0 \ \text{lorsque} \  |t-t_n| < T_n$$

%\textbf{livre Time-Frequency\\
%Signal Analysis\\
%with Applications JAUNE}



Dans le domaine d'ambiguïté $(\theta, \tau)$, on a $x_n(t+\frac{\tau}{2})x_n^*(t-\frac{\tau}{2}) \neq 0$ lorsque $$
-T_n < t - t_n + \frac{\tau}{2} < T_n \ \text{  et } \ -T_n < t - t_n + \frac{\tau}{2} < T_n
$$

On a donc que l'auto-term est compris dans $|\tau|<2T_n$, qui est autour de l'axe $\theta$ indépendamment de la position du signal $t_n$. Le cross-term entre la $n-ième$ et la $m-ième$ composante est situé dans $|\tau + t_n - t_m| < T_m + T_n$.\\
Le cross-term est distant de l'axe $\theta (\tau=0)$ lorsque $(t_m \neq t_n)$. \\

Étant donné que la fonction d'ambiguïté nous donne toutes les localisations en temps et en fréquence, l'algorithme à noyau adaptatif doit posséder un moyen de localiser le contenu de la fonction d'ambiguïté dans un intervalle de temps relativement court par rapport à l'instant $t$.\\

Ainsi, pour avoir un noyau adaptatif dans le temps et optimisé (AOK), on multiplie une \textit{short-time ambiguity function} (STAF) par un noyau gaussien RBF (Radial basis function) défini tel que :
$$
K(\theta, \tau) = e^{-\frac{\theta^2 + \tau^2}{2\sigma^2(\psi)}}
$$
avec $\sigma(\psi)$ la fonction d'étalement qui contrôle l'étalement de la gaussienne à un angle radiale $\psi$ (considéré comme un filtre passe-bas dans le domaine d'ambiguïté).\\

%Une première ébauche d'algorithme  pour l'AOK est comme suie :

On calcule la STAF à chaque instant $t$ en coordonnées cartésiennes et polaires et on résout le problème d'optimisation suivant pour obtenir le noyau optimal $\phi_{opt}(t,\theta,\tau)$ : $$
\max_\phi \int_{0}^{2\pi} \int_{0}^{\infty}|A(r,\psi)\phi(r,\psi)|^2 rdrd\psi
$$

En effet en passant en coordonnées polaires, on a $r = \sqrt{\theta^2 + \tau^2}$, l'angle $\psi = arctan(\frac{\tau}{\theta})$ (mesuré entre la ligne radiale passant par le point $(\thera,\tau)$ et l'axe $\theta$) et $$
K(r,\psi) = e^{- \frac{r^2}{2\sigma^2(\psi)}}
$$

Une autre contrainte vient s'ajouter dans le but de limiter le volume du noyau selon $\alpha$ afin de supprimer les cross-terms : $$
\frac{1}{2\pi} \int_{0}^{2\pi} \int_{0}^{\infty}|A(r,\psi)\phi(r,\psi)|^2 rdrd\psi = \frac{1}{2\pi} \int_{0}^{2\pi} \sigma^2(\psi)d\psi \leq \alpha, \text{ , avec } \alpha  \geq 0
$$

Comme la STAF varie dans le temps, le noyau optimal dépendant du signal varie également. Une fois qu'il a été déterminé, on calcul à chaque instant $t$ la représentation temps-fréquence de l'AOK, c'est-à-dire la transformée de Fourier 2-D du produit entre le noyau et la STAF.
